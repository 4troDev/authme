name: Test
on:
  push:
    branches:
      - dev
jobs:
  build:
    runs-on: ${{matrix.os}}
    strategy:
      matrix:
        include:
          - os: macos-latest
            NAME: mac
          - os: ubuntu-latest
            NAME: linux
          - os: windows-latest
            NAME: windows
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: 16
      - name: Install modules
        run: npm ci
      - name: Build project
        run: npm run build:release
      - uses: octokit/request-action@v2.x
        id: get_latest_release
        with:
          route: GET /repos/:repository/releases/latest
          repository: ${{ github.repository }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: get upload url
        id: get_upload_url
        run: >
          url=$(echo "$response" | jq -r '.upload_url')

          echo "::set-output name=url::$url"
        env:
          response: ${{ steps.get_latest_release.outputs.data }}
        shell: bash
      - name: Get version
        id: version
        uses: notiz-dev/github-action-json-property@release
        with:
          path: package.json
          prop_path: version
      - name: Upload a Release Asset
        if: runner.os == 'Windows'
        uses: actions/upload-release-asset@v1.0.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{steps.get_upload_url.outputs.url}}
          asset_path: ./dist/authme-${{steps.version.outputs.prop}}-windows-x64-installer.exe
          asset_name: authme-${{steps.version.outputs.prop}}-windows-x64-installer.exe
          asset_content_type: application/octet-stream
      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: authme-latest-release-${{matrix.NAME}}-x64-installer-portable
          path: dist
